"""
ReportManager for PentestAider.
Generates markdown reports and saves evidence.
"""

import os
import datetime

class ReportManager:
    def __init__(self, io):
        self.io = io
        self.evidence_dir = os.path.join(".aider", "evidence")
        os.makedirs(self.evidence_dir, exist_ok=True)

    def save_evidence(self, filename, data):
        """
        Save evidence data to the .aider/evidence directory.
        """
        path = os.path.join(self.evidence_dir, filename)
        with open(path, "w", encoding="utf-8") as f:
            f.write(data)
        return path

    def aggregate_results(self, recon_results, vuln_results, exploit_results, social_results):
        """
        Aggregate all category results into a markdown summary string.
        """
        md = "# PentestAider Report\n\n"
        def section(header, results):
            if results:
                md_section = f"## {header}\n"
                for tool, snippet in results:
                    md_section += f"### {tool}\n"
                    md_section += "```\n" + snippet.strip() + "\n```\n\n"
                return md_section
            return ""
        md += section("Reconnaissance", recon_results)
        md += section("Vulnerability Scanning", vuln_results)
        md += section("Exploitation", exploit_results)
        md += section("Social Engineering", social_results)
        if not (recon_results or vuln_results or exploit_results or social_results):
            md += "\n_No findings (stub)_\n"
        return md

    def generate_report(self, recon_results, vuln_results, exploit_results, social_results):
        """
        Save a markdown report with all results. Returns the saved path.
        """
        md = self.aggregate_results(recon_results, vuln_results, exploit_results, social_results)
        timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")
        fname = f"report_{timestamp}.md"
        path = self.save_evidence(fname, md)
        self.io.tool_output(f"Report written to: {path}")
        return path