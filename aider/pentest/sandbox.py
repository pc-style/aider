"""
SandboxManager for PentestAider.
Controls which binaries can be executed and enforces global safety.
"""

import os
from aider.run_cmd import run_cmd

class SandboxManager:
    allowed_binaries = [
        "nmap", "sublist3r", "masscan", "amass", "dnsenum",
        "nikto", "sqlmap", "nuclei", "msfvenom", "whois", "host"
    ]

    @staticmethod
    def safe_run(cmd, timeout=60):
        if not cmd or cmd[0] not in SandboxManager.allowed_binaries:
            raise ValueError(f"Execution of binary '{cmd[0] if cmd else ''}' is not permitted in sandboxed mode.")
        # Enforce environment override for unsafe exec
        if os.environ.get("PENTESTAIDER_UNSAFE", "0") != "1":
            return f"(sandboxed) Would run: {' '.join(cmd)}"
        return run_cmd(cmd, timeout=timeout)