"""
Aider-based Pentest AI - Local-first, AI-powered penetration testing platform
"""

__version__ = "0.1.0"
__author__ = "Pentest AI Team"
__description__ = "AI-powered penetration testing platform built on Aider's foundation"

# Core components
from .core.orchestrator import MultiAgentOrchestrator, AgentType, WorkflowStatus, AgentConfig, WorkflowStep, WorkflowResult
from .core.mcp_client import MCPClient, LLMProvider, LLMConfig, Message
from .core.container_manager import ContainerManager, ContainerStatus, ContainerConfig, ContainerResult
from .core.graph_db import GraphDatabase, NodeType, RelationshipType, GraphNode, GraphRelationship, Target, Session, Vulnerability, Credential
from .core.safety_gates import SafetyGates, SafetyLevel, ConsentStatus, SafetyRule, ConsentRecord, SafetyCheck
from .core.audit_logger import AuditLogger, LogLevel, EventType, AuditEvent

# API components
from .api.server import app as api_app

# Reporting components
from .reporting.generator import ReportGenerator, ReportTemplate, ReportData

# Monitoring components
from .monitoring.metrics import (
    MetricsManager, MetricsCollector, SystemMetricsCollector, 
    ApplicationMetricsCollector, SecurityMetricsCollector,
    MetricPoint, AlertRule
)

# Plugin components
from .plugins.manager import (
    PluginManager, PluginBase, ToolPlugin, WorkflowPlugin, IntegrationPlugin,
    PluginMetadata, PluginConfig
)

__all__ = [
    # Core components
    "MultiAgentOrchestrator",
    "AgentType", 
    "WorkflowStatus",
    "AgentConfig",
    "WorkflowStep",
    "WorkflowResult",
    
    "MCPClient",
    "LLMProvider",
    "LLMConfig", 
    "Message",
    
    "ContainerManager",
    "ContainerStatus",
    "ContainerConfig",
    "ContainerResult",
    
    "GraphDatabase",
    "NodeType",
    "RelationshipType", 
    "GraphNode",
    "GraphRelationship",
    "Target",
    "Session",
    "Vulnerability",
    "Credential",
    
    "SafetyGates",
    "SafetyLevel",
    "ConsentStatus",
    "SafetyRule",
    "ConsentRecord",
    "SafetyCheck",
    
    "AuditLogger",
    "LogLevel",
    "EventType",
    "AuditEvent",
    
    # API components
    "api_app",
    
    # Reporting components
    "ReportGenerator",
    "ReportTemplate", 
    "ReportData",
    
    # Monitoring components
    "MetricsManager",
    "MetricsCollector",
    "SystemMetricsCollector",
    "ApplicationMetricsCollector", 
    "SecurityMetricsCollector",
    "MetricPoint",
    "AlertRule",
    
    # Plugin components
    "PluginManager",
    "PluginBase",
    "ToolPlugin",
    "WorkflowPlugin",
    "IntegrationPlugin",
    "PluginMetadata",
    "PluginConfig",
]